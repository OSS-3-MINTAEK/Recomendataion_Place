import pandas as pd
from math import radians, sin, cos, sqrt, atan2
from geopy.geocoders import Nominatim

def calculate_distance(lat1, lon1, lat2, lon2):
    # 위도 및 경도를 라디안으로 변환
    lat1_rad = radians(lat1)
    lon1_rad = radians(lon1)
    lat2_rad = radians(lat2)
    lon2_rad = radians(lon2)

    # 위도 및 경도 간의 차이 계산
    dlat = lat2_rad - lat1_rad
    dlon = lon2_rad - lon1_rad

    # Haversine 공식을 사용하여 거리 계산
    a = sin(dlat/2)**2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon/2)**2
    c = 2 * atan2(sqrt(a), sqrt(1-a))
    distance = 6371 * c  # 지구의 반지름을 이용하여 거리 계산

    return distance

class Places:
    def __init__(self, cafe_data, food_data, tourist_data):
        self.cafe_places = cafe_data
        self.food_places = food_data
        self.tourist_places = tourist_data

    def compare_distances(self, user_location):
        # 사용자의 주소를 좌표로 변환
        geolocator = Nominatim(user_agent="geopy")
        user_geo = geolocator.geocode(user_location)
        user_lat = user_geo.latitude
        user_lon = user_geo.longitude

        # 거리 계산 및 결과 저장
        distances = []
        for index, row in self.cafe_places.iterrows():
            cafe_location = geolocator.geocode(row['위치'])
            cafe_lat = cafe_location.latitude
            cafe_lon = cafe_location.longitude
            cafe_distance = calculate_distance(user_lat, user_lon, cafe_lat, cafe_lon)
            distances.append(('cafe', row['name'], cafe_distance))
        
        for index, row in self.food_places.iterrows():
            food_location = geolocator.geocode(row['위치'])
            food_lat = food_location.latitude
            food_lon = food_location.longitude
            food_distance = calculate_distance(user_lat, user_lon, food_lat, food_lon)
            distances.append(('food', row['name'], food_distance))

        for index, row in self.tourist_places.iterrows():
            tourist_location = geolocator.geocode(row['위치'])
            tourist_lat = tourist_location.latitude
            tourist_lon = tourist_location.longitude
            tourist_distance = calculate_distance(user_lat, user_lon, tourist_lat, tourist_lon)
            distances.append(('tourist', row['name'], tourist_distance))

        # 거리에 따라 정렬
        distances.sort(key=lambda x: x[2])

        # 결과 출력
        print(f"장소와의 거리 ({user_location})")
        for distance in distances:
            print(f"{distance[0]}: {distance[1]}, 거리: {distance[2]:.2f} km")

# CSV 파일 경로
cafe_csv = 'cafe_place_data.csv'
food_csv = 'food_place_data.csv'
tour_csv = 'tourist_place_data.csv'

# CSV 데이터 불러오기
cafe_data = pd.read_csv(cafe_csv, encoding='utf-8')
food_data = pd.read_csv(food_csv, encoding='utf-8')
tour_data = pd.read_csv(tour_csv, encoding='utf-8')

# Place 클래스 생성
places = Places(cafe_data, food_data, tour_data)

# 사용자의 위치 입력
user_location = input("사용자 위치(주소): ")

# 장소와의 거리 비교 및 출력
places.compare_distances(user_location)
